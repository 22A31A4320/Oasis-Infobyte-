import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;

// User class representing a user
class User {
    private String username;
    private String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public void updatePassword(String newPassword) {
        this.password = newPassword;
    }
}

// MCQ class representing a multiple-choice question
class MCQ {
    private String question;
    private List<String> options;
    private String correctAnswer;

    public MCQ(String question, List<String> options, String correctAnswer) {
        this.question = question;
        this.options = options;
        this.correctAnswer = correctAnswer;
    }

    public String getQuestion() {
        return question;
    }

    public List<String> getOptions() {
        return options;
    }

    public String getCorrectAnswer() {
        return correctAnswer;
    }
}

// Main application class
public class QuizApp {
    private static Scanner scanner = new Scanner(System.in);
    private static User currentUser;
    private static List<MCQ> mcqs = new ArrayList<>();

    public static void main(String[] args) {
        initializeMCQs();
        login();

        while (true) {
            System.out.println("1. Update Profile and Password");
            System.out.println("2. Take Quiz");
            System.out.println("3. Logout");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    updateProfile();
                    break;
                case 2:
                    takeQuiz();
                    break;
                case 3:
                    logout();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void initializeMCQs() {
        // Sample MCQs
        List<String> options1 = List.of("A", "B", "C", "D");
        mcqs.add(new MCQ("Question 1?", options1, "A"));

        List<String> options2 = List.of("True", "False");
        mcqs.add(new MCQ("Question 2?", options2, "True"));
    }

    private static void login() {
        System.out.print("Enter Username: ");
        String username = scanner.next();
        System.out.print("Enter Password: ");
        String password = scanner.next();

        // For demo purposes, we hardcode a user
        if ("user".equals(username) && "pass".equals(password)) {
            currentUser = new User(username, password);
            System.out.println("Login successful!");
        } else {
            System.out.println("Invalid username or password.");
            System.exit(0);
        }
    }

    private static void updateProfile() {
        System.out.print("Enter new password: ");
        String newPassword = scanner.next();
        currentUser.updatePassword(newPassword);
        System.out.println("Password updated successfully!");
    }

    private static void takeQuiz() {
        System.out.println("Starting quiz...");

        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                System.out.println("\nTime's up! Submitting your answers.");
                submitAnswers();
            }
        }, 30000); // 30 seconds timer

        for (MCQ mcq : mcqs) {
            System.out.println(mcq.getQuestion());
            for (String option : mcq.getOptions()) {
                System.out.println(option);
            }
            System.out.print("Your answer: ");
            String answer = scanner.next();
            // Store the answer logic can be added here
        }
        timer.cancel();
        submitAnswers();
    }

    private static void submitAnswers() {
        // Logic to evaluate and submit answers can be added here
        System.out.println("Answers submitted.");
    }

    private static void logout() {
        System.out.println("Logged out successfully.");
    }
}
